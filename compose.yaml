services:
  # db-pg:
  #   image: postgres:16.0-alpine3.17
  #   restart: always
  #   environment:
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: example
  #   volumes:
  #     - ./db/pg/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #     # - ./db/data:/var/lib/postgresql/data
  #   ports:
  #     - 5432:5432

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080

  db-mongo:
    image: mongo:7.0.7-jammy
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    volumes:
      - ./db/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
  
  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://admin:example@db-mongo:27017/

  fe:
    build: 
      dockerfile: ./glassdolls/frontend/Dockerfile
      context: .
    restart: always
    ports:
      - 8501:8501
    develop:
      watch:
        - action: sync
          path: ./glassdolls/frontend/app.py
          target: /app/glassdolls/frontend/app.py
