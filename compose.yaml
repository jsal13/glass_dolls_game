services:
  # db-pg:
  #   image: postgres:16.0-alpine3.17
  #   restart: always
  #   environment:
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: example
  #   volumes:
  #     - ./db/pg/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #     # - ./db/data:/var/lib/postgresql/data
  #   ports:
  #     - 5432:5432

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080

  rabbitmq:
    image: rabbitmq:3.13-management
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
     - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  db-mongo:
    image: mongo:7.0.7-jammy
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    volumes:
      - ./db/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
  
  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://admin:example@db-mongo:27017/

  frontend:
    build: 
      context: ./glassdolls/frontend/
    restart: always
    ports:
      - 5000:5000
    develop:
      watch:
        - action: sync
          path: ./glassdolls/frontend/app.py
          target: /app/app.py

  backend:
    build: 
      context: ./glassdolls/backend/
    restart: always
    ports:
      - 8001:8001
    develop:
      watch:
        - action: sync
          path: ./glassdolls/backend/api.py
          target: /app/api.py


  # Logs
  loki:
    image: grafana/loki:2.9.0
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    networks:
      - loki

networks:
  loki:
